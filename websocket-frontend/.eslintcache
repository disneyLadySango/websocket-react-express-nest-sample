[{"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/App.tsx":"1","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/reportWebVitals.ts":"2","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/Header/index.tsx":"3","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/Header/Header.tsx":"4","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/index.tsx":"5","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/utils/logger.ts":"6","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/SimpleSocketPage/SimpleSocketPage.tsx":"7","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/SimpleSocketPage/hooks.ts":"8","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/TopPage/TopPage.tsx":"9","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/CreateModal/CreateModalPresenter.tsx":"10","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/hooks/useWebSocket.ts":"11","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomListPage/RoomListPage.tsx":"12","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomListPage/hooks.ts":"13","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomListPage/RoomListPagePresenter.tsx":"14","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/TopPage/TopPagePresenter.tsx":"15","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/CreateModal/CreateModal.tsx":"16","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomListPage/index.tsx":"17","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomPage/RoomPage.tsx":"18","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomPage/hooks.ts":"19","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/UserCreate/UserCreatePresenter.tsx":"20","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/UserCreate/UserCreate.tsx":"21","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomPage/RoomPagePresenter.tsx":"22","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/Header/HeaderPresenter.tsx":"23","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/MessageTextarea/MessageTextareaPresenter.tsx":"24","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/ChatList/ChatList.tsx":"25","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/ChatList/ChatListPresenter.tsx":"26"},{"size":898,"mtime":1612691225507,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1611833169756,"results":"29","hashOfConfig":"28"},{"size":36,"mtime":1612619383529,"results":"30","hashOfConfig":"28"},{"size":289,"mtime":1611837754284,"results":"31","hashOfConfig":"28"},{"size":501,"mtime":1612619418823,"results":"32","hashOfConfig":"28"},{"size":691,"mtime":1612699154290,"results":"33","hashOfConfig":"28"},{"size":826,"mtime":1612625341871,"results":"34","hashOfConfig":"28"},{"size":4023,"mtime":1612619660518,"results":"35","hashOfConfig":"28"},{"size":528,"mtime":1612619328574,"results":"36","hashOfConfig":"28"},{"size":2236,"mtime":1612629161194,"results":"37","hashOfConfig":"28"},{"size":2462,"mtime":1612688596744,"results":"38","hashOfConfig":"28"},{"size":1591,"mtime":1612704335826,"results":"39","hashOfConfig":"28"},{"size":2493,"mtime":1612630258436,"results":"40","hashOfConfig":"28"},{"size":2508,"mtime":1612679730996,"results":"41","hashOfConfig":"28"},{"size":498,"mtime":1612619327401,"results":"42","hashOfConfig":"28"},{"size":1127,"mtime":1612630272513,"results":"43","hashOfConfig":"28"},{"size":42,"mtime":1612627114311,"results":"44","hashOfConfig":"28"},{"size":2408,"mtime":1612706162537,"results":"45","hashOfConfig":"28"},{"size":3974,"mtime":1612706185677,"results":"46","hashOfConfig":"28"},{"size":1660,"mtime":1612677508686,"results":"47","hashOfConfig":"28"},{"size":552,"mtime":1612677734691,"results":"48","hashOfConfig":"28"},{"size":2530,"mtime":1612706270523,"results":"49","hashOfConfig":"28"},{"size":597,"mtime":1612619374427,"results":"50","hashOfConfig":"28"},{"size":1009,"mtime":1612704862589,"results":"51","hashOfConfig":"28"},{"size":1273,"mtime":1612705230289,"results":"52","hashOfConfig":"28"},{"size":2891,"mtime":1612703305850,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"176hfn2",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/App.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/reportWebVitals.ts",[],["113","114"],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/Header/index.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/Header/Header.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/index.tsx",[],["115","116"],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/utils/logger.ts",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/SimpleSocketPage/SimpleSocketPage.tsx",[],["117","118"],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/SimpleSocketPage/hooks.ts",["119"],"import { useState, useRef, useEffect } from 'react';\nimport axios, { AxiosResponse } from 'axios';\n\nimport useWebSocket from 'src/hooks/useWebSocket';\nimport Logger from 'src/utils/logger';\n\ntype ApiResponse = {\n  message: string;\n};\n\nexport const useSimpleFetchAndWebScoket = () => {\n  const logger = useRef<Logger>(new Logger('useSimpleFetchAndWebScoket'));\n  // 表示のState\n  // 入力した文字列\n  const [inputValue, setInputValue] = useState<string>('');\n  // APIリクエストのレスポンス\n  const [apiMessage, setApiMessage] = useState<string>('');\n  // ソケット側で通知がきた回数\n  const [socketCount, setSocketCount] = useState<number>(0);\n  // ソケット側で通知がきたメッセージ\n  const [scoketMessage, setSocketMessage] = useState<string>('');\n  // コネクションID\n  const [connectionId, setConnectionId] = useState<string>('');\n\n  // WebScoketのクライアントオブジェクト\n  const onConnect = () => {\n    const id = socket.current?.id || '';\n    setConnectionId(id);\n  };\n  const onConnectError = () => {\n    const id = socket.current?.id || '';\n    setConnectionId(id);\n  };\n  const onDisconnect = () => {\n    setSocketCount(0);\n    setSocketMessage('');\n    // 切れた場合はundefinedが設定される\n    const id = socket.current?.id || '';\n    setConnectionId(id);\n  };\n\n  const { socket, errorCount, status } = useWebSocket(\n    'ws://localhost:9000/simple',\n    {\n      onConnect,\n      onConnectError,\n      onDisconnect,\n    }\n  );\n  // コールバック登録\n  useEffect(() => {\n    logger.current.debug('[useEffect]');\n    // 通知を受信する\n    socket.current?.on('message', (message: string) => {\n      logger.current.debug(`[websocket message]`, message);\n      setSocketCount((prevCount) => prevCount + 1);\n      setSocketMessage(message);\n      const id = socket.current?.id || '';\n      setConnectionId(id);\n    });\n    socket.current?.on('send', (message: string) => {\n      logger.current.debug(`[websocket send]`, message);\n      setSocketCount((prevCount) => prevCount + 1);\n      setSocketMessage(message);\n      const id = socket.current?.id || '';\n      setConnectionId(id);\n    });\n  }, []);\n\n  // action\n  // inputの入力を受け取る\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    logger.current.debug('[onChange]', event);\n    setInputValue(event.target.value);\n  };\n  // APIリクエスト\n  const onClickFetch = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    logger.current.debug('[onClickFetch]', event);\n    const response: AxiosResponse<ApiResponse> = await axios.get(\n      `http://localhost:9000/simple`,\n      {\n        params: {\n          message: inputValue,\n        },\n      }\n    );\n    logger.current.debug('[onClickFetch]-response', response);\n    setApiMessage(response.data?.message);\n    socket.current?.disconnected && socket.current?.connect();\n  };\n  // コネクション切断\n  const onClickConnection = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    logger.current.debug('[onClickConnection]', event);\n\n    if (socket.current?.connected) {\n      logger.current.debug('[onClickConnection]-disconnect');\n      socket.current?.disconnect();\n    } else {\n      logger.current.debug('[onClickConnection]-connect');\n      socket.current?.connect();\n    }\n  };\n  // WebSocketを使ってメッセージをサーバに送る\n  const onClickSender = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    logger.current.debug('[onClickSender]', event);\n    if (socket.current?.disconnected) {\n      socket.current?.connect();\n    }\n    socket.current?.emit('send', inputValue);\n  };\n\n  const states = {\n    inputValue,\n    apiMessage,\n    socketCount,\n    scoketMessage,\n    status,\n    connectionId,\n    errorCount,\n  };\n  const actions = {\n    onChange,\n    onClickFetch,\n    onClickConnection,\n    onClickSender,\n  };\n  return [states, actions] as const;\n};\n","/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/TopPage/TopPage.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/CreateModal/CreateModalPresenter.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/hooks/useWebSocket.ts",["120"],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomListPage/RoomListPage.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomListPage/hooks.ts",["121","122","123"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport axios from 'axios';\n\nimport Logger from 'src/utils/logger';\nimport * as ModelTypes from 'src/types/model';\n\nexport const useRoomList = () => {\n  const logger = useRef<Logger>(new Logger('useRoomList'));\n\n  const [roomList, setRoomList] = useState<ModelTypes.Room[]>([]);\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [name, setName] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n\n  useEffect(() => {\n    logger.current.debug('useEffect');\n    const fetchRoomList = async () => {\n      logger.current.debug('[fetchRoomList]');\n      const result = await axios.get<{ rooms: ModelTypes.Room[] }>(\n        'http://localhost:9000/room'\n      );\n      logger.current.info('[fetchRoomList]-result', result);\n      setRoomList(result.data.rooms);\n    };\n    fetchRoomList();\n  }, []);\n\n  const onChangeName = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      event.preventDefault();\n      logger.current.debug('[onChangeName]', event);\n      setName(event.target.value);\n    },\n    [name]\n  );\n\n  const onChangeDescription = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      event.preventDefault();\n      logger.current.debug('[onChangeDescription]', event);\n      setDescription(event.target.value);\n    },\n    [description]\n  );\n\n  const onOpen = useCallback((): void => {\n    logger.current.debug('[onOpen]');\n    setIsOpen(true);\n  }, []);\n\n  const onClose = useCallback((): void => {\n    logger.current.debug('[onClose]');\n    setIsOpen(false);\n    setName('');\n    setDescription('');\n  }, []);\n\n  const onSubmit = useCallback(\n    async (event: React.FormEvent<HTMLButtonElement>): Promise<void> => {\n      event.preventDefault();\n      logger.current.debug('[onSubmit]', event);\n      const requestParam = {\n        name,\n        description,\n      };\n      const result = await axios.post<{ rooms: ModelTypes.Room[] }>(\n        'http://localhost:9000/room',\n        {\n          ...requestParam,\n        }\n      );\n      logger.current.info('[onSubmit]-result', result);\n      setRoomList(result.data.rooms);\n      onClose();\n    },\n    [name, description, isOpen]\n  );\n\n  const states = {\n    roomList,\n    isOpen,\n    name,\n    description,\n  };\n  const actions = {\n    onChangeName,\n    onChangeDescription,\n    onOpen,\n    onClose,\n    onSubmit,\n  };\n\n  return [states, actions] as const;\n};\n",["124","125"],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomListPage/RoomListPagePresenter.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/TopPage/TopPagePresenter.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/CreateModal/CreateModal.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomListPage/index.tsx",[],["126","127"],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomPage/RoomPage.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomPage/hooks.ts",["128","129","130","131","132","133","134"],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/UserCreate/UserCreatePresenter.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/UserCreate/UserCreate.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/container/RoomPage/RoomPagePresenter.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/Header/HeaderPresenter.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/MessageTextarea/MessageTextareaPresenter.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/ChatList/ChatList.tsx",[],"/Users/wayamayu/mySample/websocket-nest-react-sample/websocket-frontend/src/compontns/ChatList/ChatListPresenter.tsx",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"135","replacedBy":"139"},{"ruleId":"137","replacedBy":"140"},{"ruleId":"135","replacedBy":"141"},{"ruleId":"137","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":68,"column":6,"nodeType":"145","endLine":68,"endColumn":8,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":66,"column":6,"nodeType":"145","endLine":66,"endColumn":8,"suggestions":"148"},{"ruleId":"143","severity":1,"message":"149","line":35,"column":5,"nodeType":"145","endLine":35,"endColumn":11,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"151","line":44,"column":5,"nodeType":"145","endLine":44,"endColumn":18,"suggestions":"152"},{"ruleId":"143","severity":1,"message":"153","line":77,"column":5,"nodeType":"145","endLine":77,"endColumn":32,"suggestions":"154"},{"ruleId":"135","replacedBy":"155"},{"ruleId":"137","replacedBy":"156"},{"ruleId":"135","replacedBy":"157"},{"ruleId":"137","replacedBy":"158"},{"ruleId":"143","severity":1,"message":"159","line":64,"column":14,"nodeType":"160","endLine":64,"endColumn":21},{"ruleId":"143","severity":1,"message":"161","line":66,"column":6,"nodeType":"145","endLine":66,"endColumn":8,"suggestions":"162"},{"ruleId":"143","severity":1,"message":"149","line":73,"column":5,"nodeType":"145","endLine":73,"endColumn":11,"suggestions":"163"},{"ruleId":"143","severity":1,"message":"164","line":83,"column":5,"nodeType":"145","endLine":83,"endColumn":19,"suggestions":"165"},{"ruleId":"143","severity":1,"message":"166","line":91,"column":5,"nodeType":"145","endLine":91,"endColumn":14,"suggestions":"167"},{"ruleId":"143","severity":1,"message":"168","line":101,"column":5,"nodeType":"145","endLine":101,"endColumn":22,"suggestions":"169"},{"ruleId":"143","severity":1,"message":"170","line":120,"column":5,"nodeType":"145","endLine":120,"endColumn":7,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],["172"],["173"],["172"],["173"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has missing dependencies: 'connectUrl', 'isUnmountDisconnect', 'reConnectCount', 'reConnectInterval', and 'socketEvent'. Either include them or remove the dependency array. If 'setErrorCount' needs the current value of 'reConnectCount', you can also switch to useReducer instead of useState and read 'reConnectCount' in the reducer.",["175"],"React Hook useCallback has an unnecessary dependency: 'name'. Either exclude it or remove the dependency array.",["176"],"React Hook useCallback has an unnecessary dependency: 'description'. Either exclude it or remove the dependency array.",["177"],"React Hook useCallback has a missing dependency: 'onClose'. Either include it or remove the dependency array.",["178"],["172"],["173"],["172"],["173"],"The ref value 'socket.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'socket.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","React Hook useEffect has missing dependencies: 'socket' and 'uid'. Either include them or remove the dependency array.",["179"],["180"],"React Hook useCallback has a missing dependency: 'uid'. Either include it or remove the dependency array.",["181"],"React Hook useCallback has an unnecessary dependency: 'message'. Either exclude it or remove the dependency array.",["182"],"React Hook useCallback has missing dependencies: 'socket' and 'uid'. Either include them or remove the dependency array.",["183"],"React Hook useCallback has missing dependencies: 'myUser' and 'uid'. Either include them or remove the dependency array.",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"189","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"189","fix":"196"},{"desc":"197","fix":"198"},{"desc":"189","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [socket]",{"range":"204","text":"205"},"Update the dependencies array to be: [connectUrl, isUnmountDisconnect, reConnectCount, reConnectInterval, socketEvent]",{"range":"206","text":"207"},"Update the dependencies array to be: []",{"range":"208","text":"209"},{"range":"210","text":"209"},"Update the dependencies array to be: [name, description, onClose]",{"range":"211","text":"212"},"Update the dependencies array to be: [socket, uid]",{"range":"213","text":"214"},{"range":"215","text":"209"},"Update the dependencies array to be: [socket, uid, name]",{"range":"216","text":"217"},{"range":"218","text":"209"},"Update the dependencies array to be: [message, myUser, socket, uid]",{"range":"219","text":"220"},"Update the dependencies array to be: [myUser, uid]",{"range":"221","text":"222"},[2000,2002],"[socket]",[2289,2291],"[connectUrl, isUnmountDisconnect, reConnectCount, reConnectInterval, socketEvent]",[1142,1148],"[]",[1401,1414],[2234,2261],"[name, description, onClose]",[2151,2153],"[socket, uid]",[2304,2310],[2521,2535],"[socket, uid, name]",[2697,2706],[2948,2965],"[message, myUser, socket, uid]",[3344,3346],"[myUser, uid]"]